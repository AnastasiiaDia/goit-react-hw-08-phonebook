{"version":3,"file":"static/js/696.461f6ef7.chunk.js","mappings":"sOAAaA,EAAkB,CAC7BC,SAAU,YACVC,UAAW,IACXC,iBAAiB,EACjBC,cAAc,EACdC,cAAc,EACdC,WAAW,EACXC,cAAUC,EACVC,MAAO,UACPC,MAAO,CAAEC,gBAAiB,SAAUC,aAAc,S,uCCPvCC,EAAKC,EAAAA,EAAAA,GAAH,sc,SC0Bf,EAtBgB,SAAC,GAA0B,IAAxBC,EAAuB,EAAvBA,KAAMC,EAAiB,EAAjBA,GAAIC,EAAa,EAAbA,OAC3B,GAAkCC,EAAAA,EAAAA,MAAlC,eAAOC,EAAP,KAAmBC,EAAnB,KAAmBA,UAMnB,OACE,UAACP,EAAD,YACE,0BAAOE,KACP,0BAAOE,KAEP,SAAC,KAAD,CACEI,SAAUD,EACVE,KAAK,SACLC,QAAS,kBAba,SAAAP,GAC1BG,EAASH,GACTQ,EAAAA,GAAAA,QAAA,UAAiBT,EAAjB,0CAAqDf,EACtD,CAUoByB,CAAoBT,EAA1B,EAHX,SAKGI,EAAY,cAAgB,aAIpC,EC1BYM,EAAKZ,EAAAA,EAAAA,GAAH,gJCKFa,EAAc,WACzB,IAAQC,GAASC,EAAAA,EAAAA,MAATD,KACR,GAAsCE,EAAAA,EAAAA,UAAS,IAA/C,eAAOC,EAAP,KAAoBC,EAApB,KAIMC,EAAe,OAAGL,QAAH,IAAGA,OAAH,EAAGA,EAAMM,QAAO,SAAAC,GAAO,OAC1CA,EAAQpB,KAAKqB,cAAcC,SAASN,EAAYK,cADN,IAG5C,OACE,iCACO,OAAJR,QAAI,IAAJA,OAAA,EAAAA,EAAMU,QAAS,IACd,SAAC,KAAD,CACEhB,KAAK,OACLP,KAAK,SACLwB,SAZe,SAAAC,GACrBR,EAAeQ,EAAMC,OAAOC,MAC7B,EAWOC,YAAY,yBAGhB,SAACjB,EAAD,iBACGO,QADH,IACGA,OADH,EACGA,EAAiBW,KAAI,gBAAG5B,EAAH,EAAGA,GAAID,EAAP,EAAOA,KAAME,EAAb,EAAaA,OAAb,OACpB,SAAC,EAAD,CAAkBD,GAAIA,EAAID,KAAMA,EAAME,OAAQA,GAAhCD,EADM,QAM7B,EC/BY6B,EAAY/B,EAAAA,EAAAA,IAAH,0WCoDtB,MAxCA,WACE,IAAMgC,GAAQC,EAAAA,EAAAA,QAAOC,aAAaC,QAAQ,WAC1CC,EAAAA,EAAAA,IAAcJ,EAAMK,SACpB,IAAQvB,GAASC,EAAAA,EAAAA,MAATD,KACR,GAAqBwB,EAAAA,EAAAA,MAAdC,GAAP,eAsBA,OACE,UAACR,EAAD,YACE,uCACA,UAAC,KAAD,CAAQS,SAvBS,SAAAd,GACnBA,EAAMe,iBACN,IAGMC,EAAe,CAAEzC,KAHVyB,EAAMiB,cAAcC,SAAS3C,KAAK2B,MAGlBzB,OAFduB,EAAMiB,cAAcC,SAASzC,OAAOyB,OAMnD,GAFAF,EAAMC,OAAOkB,QAET/B,EAAKgC,MAAK,gBAAG7C,EAAH,EAAGA,KAAH,OAAcyC,EAAazC,OAASA,CAApC,IACZ,OAAO8C,MAAM,GAAD,OAAIL,EAAazC,KAAjB,gCAGdsC,EAAWG,GACXhC,EAAAA,GAAAA,QAAA,UACKgC,EAAazC,KADlB,yCAEEf,EAEH,EAKG,WACE,oCACA,SAAC,KAAD,CAAOsB,KAAK,OAAOP,KAAK,OAAO+C,UAAQ,EAACnB,YAAY,mBACpD,sCACA,SAAC,KAAD,CAAOrB,KAAK,MAAMP,KAAK,SAAS+C,UAAQ,EAACnB,YAAY,eACrD,SAAC,KAAD,CAAQrB,KAAK,SAAb,6BAEF,SAACK,EAAD,MAGL,C","sources":["utilits/toastifySettings.js","components/Contact/Contact.styled.js","components/Contact/Contact.jsx","components/ContactList/ContactList.styled.js","components/ContactList/ContactList.jsx","components/Container.styled.js","pages/BookPage.jsx"],"sourcesContent":["export const successSettings = {\n  position: 'top-right',\n  autoClose: 5000,\n  hideProgressBar: false,\n  closeOnClick: true,\n  pauseOnHover: true,\n  draggable: true,\n  progress: undefined,\n  theme: 'colored',\n  style: { backgroundColor: 'orange', borderRadius: '10px' },\n};\n","import styled from '@emotion/styled';\n\nexport const Li = styled.li`\n  display: flex;\n  flex: 1;\n  align-items: center;\n  justify-content: space-between;\n  gap: 10px;\n\n  height: 25px;\n  padding: 7px;\n  min-width: 250px;\n  text-shadow: rgba(0, 0, 0, 0.4) 0px 2px 4px,\n    rgba(0, 0, 0, 0.3) 0px 7px 13px -3px, rgba(0, 0, 0, 0.2) 0px -3px 0px inset;\n  text-decoration: none;\n  border-radius: 20px;\n  box-shadow: rgba(0, 0, 0, 0.25) 0px 14px 28px,\n    rgba(0, 0, 0, 0.22) 0px 10px 10px;\n`;\n","import { Button } from 'components/Form/FormElements.styled';\nimport { Li } from './Contact.styled';\nimport { useDeleteContactMutation } from 'redux/contactsReducer';\nimport { toast } from 'react-toastify';\nimport { successSettings } from 'utilits/toastifySettings';\n\nconst Contact = ({ name, id, number }) => {\n  const [onDelete, { isLoading }] = useDeleteContactMutation();\n  const onDeleteContactById = id => {\n    onDelete(id);\n    toast.success(`${name} was deleted successfully üëÄ`, successSettings);\n  };\n\n  return (\n    <Li>\n      <span>{name}</span>\n      <span>{number}</span>\n\n      <Button\n        disabled={isLoading}\n        type=\"button\"\n        onClick={() => onDeleteContactById(id)}\n      >\n        {isLoading ? 'Deliting...' : 'Delete'}\n      </Button>\n    </Li>\n  );\n};\nexport default Contact;\n","import styled from '@emotion/styled';\nexport const Ul = styled.ul`\n  display: flex;\n  gap: 10px;\n  flex-direction: column;\n  flex: 1;\n  list-style: none;\n  padding-inline-start: 0;\n`;\n","import { useGetContactsQuery } from 'redux/contactsReducer.js';\nimport Contact from '../Contact/Contact.jsx';\nimport { Ul } from './ContactList.styled.js';\nimport { useState } from 'react';\nimport { InputSearch } from 'components/Form/FormElements.styled.js';\n\nexport const ContactList = () => {\n  const { data } = useGetContactsQuery();\n  const [filterValue, setFilterValue] = useState('');\n  const onChangeFilter = event => {\n    setFilterValue(event.target.value);\n  };\n  const filteredContact = data?.filter(contact =>\n    contact.name.toLowerCase().includes(filterValue.toLowerCase())\n  );\n  return (\n    <>\n      {data?.length > 0 && (\n        <InputSearch\n          type=\"text\"\n          name=\"filter\"\n          onChange={onChangeFilter}\n          placeholder=\"Search your contact\"\n        />\n      )}\n      <Ul>\n        {filteredContact?.map(({ id, name, number }) => (\n          <Contact key={id} id={id} name={name} number={number} />\n        ))}\n      </Ul>\n    </>\n  );\n};\n","import styled from '@emotion/styled';\nexport const Container = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  flex-direction: column;\n  width: 360px;\n  margin: auto;\n\n  padding-bottom: 30px;\n\n  border: 2px solid orange;\n  /* border-radius: 30px; */\n  background-color: orange;\n  box-shadow: rgba(0, 0, 0, 0.25) 0px 14px 28px,\n    rgba(0, 0, 0, 0.22) 0px 10px 10px;\n`;\n","import { toast } from 'react-toastify';\nimport { Button, FormEl, Input } from '../components/Form/FormElements.styled';\n\nimport {\n  useAddContactMutation,\n  useGetContactsQuery,\n} from 'redux/contactsReducer';\nimport { successSettings } from 'utilits/toastifySettings';\nimport { useRef } from 'react';\nimport { setAuthHeader } from 'redux/authReducer';\nimport { ContactList } from 'components/ContactList/ContactList';\nimport { Container } from 'components/Container.styled';\n\nfunction BookPage() {\n  const token = useRef(localStorage.getItem('token'));\n  setAuthHeader(token.current);\n  const { data } = useGetContactsQuery();\n  const [addContact] = useAddContactMutation();\n\n  const onFormSubmit = event => {\n    event.preventDefault();\n    const name = event.currentTarget.elements.name.value;\n    const number = event.currentTarget.elements.number.value;\n\n    const addedContact = { name, number };\n\n    event.target.reset();\n\n    if (data.some(({ name }) => addedContact.name === name)) {\n      return alert(`${addedContact.name} is alrady in your contacts`);\n    }\n\n    addContact(addedContact);\n    toast.success(\n      `${addedContact.name} is now in your contacts ü§ç`,\n      successSettings\n    );\n  };\n\n  return (\n    <Container>\n      <h1>Phonebook</h1>\n      <FormEl onSubmit={onFormSubmit}>\n        <span>Name</span>\n        <Input type=\"text\" name=\"name\" required placeholder=\"Diana Ivanova\" />\n        <span>Number</span>\n        <Input type=\"tel\" name=\"number\" required placeholder=\"123-45-67\" />\n        <Button type=\"submit\">Add contact</Button>\n      </FormEl>\n      <ContactList />\n    </Container>\n  );\n}\nexport default BookPage;\n"],"names":["successSettings","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","theme","style","backgroundColor","borderRadius","Li","styled","name","id","number","useDeleteContactMutation","onDelete","isLoading","disabled","type","onClick","toast","onDeleteContactById","Ul","ContactList","data","useGetContactsQuery","useState","filterValue","setFilterValue","filteredContact","filter","contact","toLowerCase","includes","length","onChange","event","target","value","placeholder","map","Container","token","useRef","localStorage","getItem","setAuthHeader","current","useAddContactMutation","addContact","onSubmit","preventDefault","addedContact","currentTarget","elements","reset","some","alert","required"],"sourceRoot":""}